
#pragma once
#include "codec.h"
#include "kv_core.h"

/* === Per-DB typed wrappers generated by macro === */
#define DECL_PUT_GET_DEL(NAME, DBI, KTYPE, VTYPE, KENC)                  \
    static inline int NAME##_put(DB* db, const KTYPE* k, const VTYPE* v, \
                                 unsigned flags)                         \
    {                                                                    \
        return kv_put(db, DBI, k, v, flags);                             \
    }                                                                    \
    static inline int NAME##_get(DB* db, const KTYPE* k, VTYPE* out)     \
    {                                                                    \
        return kv_get(db, DBI, k, out);                                  \
    }                                                                    \
    static inline int NAME##_del(DB* db, const KTYPE* k)                 \
    {                                                                    \
        return kv_del(db, DBI, k);                                       \
    }

/* USER */
DECL_PUT_GET_DEL(user, DBI_USER, uuid16_t, user_rec_t, enc_uuid)
/* EMAIL2ID uses email_key_t â†’ uuid16 */
DECL_PUT_GET_DEL(email2id, DBI_EMAIL2ID, email_key_t, uuid16_t, enc_email)
/* DATA_META */
DECL_PUT_GET_DEL(data_meta, DBI_DATA_META, uuid16_t, data_meta_rec_t, enc_uuid)
/* SHA2DATA */
DECL_PUT_GET_DEL(sha2data, DBI_SHA2DATA, sha256_t, uuid16_t, enc_sha256)
/* ACLs store presence u8=1 */
DECL_PUT_GET_DEL(acl_fwd, DBI_ACL_FWD, acl_fwd_k_t, u8, enc_acl_fwd_k)
DECL_PUT_GET_DEL(acl_rev, DBI_ACL_REV, acl_rev_k_t, u8, enc_acl_rev_k)

/* Convenience flags */
#define NO_OVERWRITE MDB_NOOVERWRITE
#define APPEND       MDB_APPEND
#define RESERVE      MDB_RESERVE
